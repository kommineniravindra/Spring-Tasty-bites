package com.sathya.config;


import org.springframework.cloud.gateway.config.GlobalCorsProperties;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.web.cors.*;
import org.springframework.web.cors.reactive.CorsWebFilter;
import org.springframework.web.cors.reactive.UrlBasedCorsConfigurationSource;

@Configuration
public class CorsGlobalConfig {

    @Bean
    public GlobalFilter corsFilter() {
        return (exchange, chain) -> {
            ServerHttpRequest request = exchange.getRequest();

            // If it's a preflight request (OPTIONS), set headers
            if (request.getMethod() == HttpMethod.OPTIONS) {
                ServerHttpResponse response = exchange.getResponse();
                HttpHeaders headers = response.getHeaders();

                headers.add("Access-Control-Allow-Origin", "http://localhost:5173");
                headers.add("Access-Control-Allow-Methods", "GET, POST, PUT, DELETE, OPTIONS");
                headers.add("Access-Control-Allow-Headers", "*");
                headers.add("Access-Control-Allow-Credentials", "true");
                response.setStatusCode(HttpStatus.OK);

                return response.setComplete(); // Do not proceed further for OPTIONS
            }

            // For normal requests, add the header and continue
            return chain.filter(exchange.mutate().request(
                exchange.getRequest().mutate()
                    .header("Access-Control-Allow-Origin", "http://localhost:5173")
                    .build()
            ).build());
        };
    }
}
