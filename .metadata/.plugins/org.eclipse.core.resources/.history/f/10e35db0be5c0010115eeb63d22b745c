package com.sathya.controller;

import com.sathya.dto.SignupRequest;
import com.sathya.entity.LoginDetails;
import com.sathya.service.UserService;
import com.sathya.util.JwtUtil;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

@RestController
@RequestMapping("/api/auth")
public class JwtController {

    @Autowired
    private UserService userService; // ✅ Inject userService

    @PostMapping("/login")
    public ResponseEntity<String> login(@RequestBody LoginDetails loginDetails) {
        // Simulated user verification
        if (loginDetails.getUsername().equals("ratan") &&
            loginDetails.getPassword().equals("Ratan@123")) {

            String token = JwtUtil.generateToken(loginDetails.getUsername(), loginDetails.getRole());
            return ResponseEntity.status(HttpStatus.OK)
                    .header("token", "Token generated successfully...")
                    .body(token);
        } else {
            return ResponseEntity.status(HttpStatus.UNAUTHORIZED)
                    .header("token", "username & password fail...")
                    .body("username & password fail...");
        }
    }

    @PostMapping("/signup")
    public ResponseEntity<String> signup(@RequestBody SignupRequest signupRequest) {
        String result = userService.registerUser(signupRequest); // ✅ Works now
        if (result.equals("User registered successfully")) {
            return ResponseEntity.status(HttpStatus.CREATED).body(result);
        } else {
            return ResponseEntity.status(HttpStatus.BAD_REQUEST).body(result);
        }
    }
}
